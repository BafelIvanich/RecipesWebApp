@using Microsoft.AspNetCore.Http
@using RecipesApp.Extensions
@using RecipesApp.ViewModels
@inject IHttpContextAccessor HttpContextAccessor
@model Recipe

@{

    var session = HttpContextAccessor?.HttpContext?.Session;
    var fridgeIngredients = session?.Get<List<IngredientViewModel>>("Fridge") ?? new List<IngredientViewModel>();
}

<div class="recipe-header mb-4">

    <div class="row">
        <div class="col-md-6">
            <img src="@(!string.IsNullOrEmpty(Model.ImageUrl) ? Model.ImageUrl : "/images/placeholder.png")" class="img-fluid rounded mb-3 recipe-image" alt="@Model.Name">
        </div>
        <div class="col-md-6">
            <h2>@Model.Name</h2>
            <p class="lead"><strong>Время приготовления:</strong> @Model.Time минут</p>

            <div class="container mb-4">
                @if (Model.Tags != null)
            {
                @foreach (var tag in Model.Tags)
                {
                        <span class="badge bg-secondary">
                            @tag.Name
                        </span>
                }
            }
            </div>

            

            <h3>Ингредиенты</h3>
            <ul class="list-group mb-4">
                @foreach (var recipeIngredient in Model.RecipeIngredients)
                {
                    var inFridge = fridgeIngredients.Any(f => f.Name == recipeIngredient.Ingredient.Name);
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div>
                            @recipeIngredient.Ingredient.Name - @recipeIngredient.Quantity @recipeIngredient.Unit
                        </div>
                        @if (inFridge)
                        {
                            <span class="badge bg-success">
                                <i class="fas fa-check"></i> В холодильнике
                            </span>
                        }
                        else
                        {
                            <span class="badge bg-danger">
                                <i class="fas fa-times"></i> Отсутствует
                            </span>
                        }
                    </li>
                }
            </ul>
            <form asp-action="CookRecipe" asp-route-id="@Model.Id" method="post">
                <button type="submit" class="btn btn-recipe">
                    Готовлю
                </button>
            </form>
        </div>
    </div>



</div>


<div class="col-md-12">
    <h3>Инструкция</h3>
    <div class="steps-container">
        @{
            var orderedSteps = Model.Steps?.OrderBy(s => s.StepOrder).ToList() ?? new List<Step>();
        }
        @if (orderedSteps.Any())
        {
            @for (int i = 0; i < orderedSteps.Count; i++)
            {
                var step = orderedSteps[i];
                <div class="step-card mb-4 p-3 border rounded">
                    <div class="step-number">Шаг @(i + 1)</div>
                    <div class="step-content">
                        @if (!string.IsNullOrEmpty(step.ImageUrl))
                        {
                            <img src="@step.ImageUrl" class="step-image img-fluid mb-3" alt="Шаг @(i + 1)">
                        }
                        <div class="step-description">
                            @Html.Raw(step.Description.Replace("\n", "<br>"))
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p>Инструкция пока не добавлена.</p>
        }
    </div>
</div>


<style>
    .list-group-item {
        transition: all 0.3s ease;
    }

    .badge {
        font-size: 0.9rem;
        padding: 0.5em 0.75em;
    }

    .fa-check, .fa-times {
        margin-right: 0.3rem;
    }
</style>


<script>
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.favorite-btn').forEach(btn => {
                btn.addEventListener('click', async function() {
                    const recipeId = this.dataset.recipeId;
                    const cardColumn = this.closest('.col-md-4');

                    try {
                        const response = await fetch(`/Recipes/ToggleFavorite?recipeId=${recipeId}`, {
                            method: 'POST'
                        });

                        if (response.ok) {
                            cardColumn.remove();

                            const remainingCards = document.querySelectorAll('.col-md-4');
                            if (remainingCards.length === 0) {
                                document.getElementById('favorites-container').innerHTML = `
                                    <p>Вы еще не добавили рецепты в избранные!</p>
                                `;
                            }
                        }
                    } catch (error) {
                        console.error('Error:', error);
                    }
                });
            });
        });
</script>
