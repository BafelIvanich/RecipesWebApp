@model RecipeSearchViewModel
@{
    ViewData["Title"] = "Search";
}

<h1>Поиск</h1>

<form asp-controller="Recipes" asp-action="Search" method="get" class="mb-4">
    <div class="mb-3">
        <label for="query" class="form-label">Название рецепта</label>
        <input type="text" id="query" name="query" class="form-control" value="" placeholder="Введите название рецепта" />
    </div>

    <div class="mb-3" id="ingredientsSection" >
        <label>Добавьте ингредиенты</label>
        <div style="position: relative;">
            <input type="text" id="ingredientSearch" class="form-control"
                placeholder="Поиск ингредиентов" autocomplete="off"
                onkeydown="return handleEnter(event)" />
            <div id="ingredientDropdown" class="dropdown-menu"
                style="display:none; width:100%; position:absolute; z-index:1000;"></div>
        </div>
        <ul id="IngredientList" class="list-group mt-2">
            @if (Model.SelectedIngredients != null)
            {
                foreach (var ingredient in Model.SelectedIngredients)
                {
                    <li class="list-group-item d-flex align-items-center gap-3">
                        <div class="d-flex gap-2 align-items-center flex-grow-1">
                            <span class="ingredient-name">@ingredient.Name</span>
                            <input type="number"
                            name="quantities"
                            value="@ingredient.Quantity"
                            min="0.1"
                            step="0.1"
                            class="form-control form-control-sm quantity-input"
                            style="width: 100px">
                            <span class="unit-display">@ingredient.Unit</span>
                        </div>
                        <input type="hidden" name="ingredients" value="@ingredient.Name">
                        <input type="hidden" name="units" value="@ingredient.Unit">
                        <button type="button" class="btn btn-sm btn-danger" onclick="removeIngredient(this)">&times;</button>
                    </li>
                }
            }
        </ul>
    </div>

    <div class="mb-3">
        <label for="cookingTIme" class="form-label">Время приготовления (в минутах)</label>
        <input type="number" id="cookingTime" name="cookingTime" class="form-control" value="" />
    </div>

    <div class="mb-3">
        <label for="sortOrder" class="form-label">Сортировка:</label>
        <select name="sortOrder" class="form-select" style="width:auto;display:inline-block;">
            <option value="">По умолчанию</option>
            <option value="time_asc">Время приготовления (по возрастанию)</option>
            <option value="time_desc">Время приготовления (по убыванию)</option>
        </select>
    </div>

    <div class="mb-3 form-check">
        <input type="checkbox" class="form-check-input" id="useFridge" name="useFridge" value="true">
        <label class="form-check-label" for="useFridge">Использовать продукты из холодильника</label>
    </div>


    <button type="submit" class="btn btn-success">Поиск</button>

</form>

@if (Context.Request.QueryString.HasValue)
{
    @if (Model.Results.Any())
    {
        <div class="search-results mt-5">
            <h3>Найдено рецептов: @Model.Results.Count</h3>
            <div class="row row-cols-1 row-cols-md-3 g-4 mt-2">
                @foreach (var result in Model.Results)
                {
                    <div class="col">
                        <div class="card h-100 mb-3 card-hover">
                            <img src="@(result.Recipe.ImageUrl ?? "/images/placeholder.jpg")"
                            class="card-img-top"
                            alt="@result.Recipe.Name"
                            style="height: 200px; object-fit: cover;">
                            <div class="card-body">
                                <h5 class="card-title">@result.Recipe.Name</h5>

                                @if (result.MatchedIngredients.Any())
                                {
                                    <div class="matched-ingredients mb-2">
                                        <small class="text-success">
                                            <strong>Совпадает (@result.MatchedIngredients.Count):</strong>
                                        </small>
                                        <div class="d-flex flex-wrap gap-1">
                                            @foreach (var ingredint in result.MatchedIngredients)
                                            {
                                                <span class="badge bg-success">@ingredint</span>
                                            }
                                        </div>
                                    </div>
                                }
                                

                                @if (result.MissingIngredients.Any())
                                {
                                    <div class="missing-ingredients">
                                        <small class="text-danger">
                                            <strong>Отсутствует (@result.MissingIngredients.Count):</strong>
                                        </small>
                                        <div class="d-flex flex-wrap gap-1">
                                            @foreach(var ingredient in result.MissingIngredients)
                                            {
                                                <span class="badge bg-danger">@ingredient</span>
                                            }
                                        </div>
                                    </div>
                                }

                                <p class="card-text">
                                    <small class="text-muted">
                                        <i class="fas fa-clock"></i> @result.Recipe.Time минут
                                        </small>
                                </p>

                                <a asp-controller="Recipes"
                                   asp-action="Details"
                                   asp-route-id="@result.Recipe.Id"
                                   class="btn btn-primary btn-sm">
                                    Посмотреть рецепт
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    else
    {
        <div class="alert alert-info mt-4">
            По вашему запросу ничего не найдено
        </div>
    }
}

else if (Context.Request.QueryString.HasValue)
{
    <div class="alert alert-info mt-4">
        Ничего не найдено
    </div>
}

<style>
    .card-hover {
        position: relative;
        overflow: visible; 
        border: none;
        margin: 8px; 
    }

        .card-hover::before {
            content: '';
            position: absolute;
            top: -2px; 
            left: -2px;
            right: -2px;
            bottom: -2px;
            border: 4px solid #000;
            z-index: 1;
            pointer-events: none;
            animation: none;
            border-radius: 8px;
            background: transparent;
        }

        .card-hover:hover::before {
            animation: warp 1.5s infinite linear;
        }

    
    .card-img-top {
        margin: 4px;
        width: calc(100% - 8px);
    }

    .card-body {
        padding: 1rem;
        margin: 2px;
    }

    @@keyframes warp {
        
        0%

    {
        transform: scale(1);
        border-radius: 8px;
    }

    25% {
        transform: scale(1.02, 1.01);
        border-radius: 10px;
    }

    50% {
        transform: scale(1.01, 1.02);
        border-radius: 12px;
    }

    75% {
        transform: scale(1.02, 1.01);
        border-radius: 10px;
    }

    100% {
        transform: scale(1);
        border-radius: 8px;
    }

    }
</style>

@section Scripts {
    <script>
        //fridge section
            document.getElementById('useFridge').addEventListener('change', function(e) {
            const ingredientsSection = document.getElementById('ingredientsSection');
            const searchInput = document.getElementById('ingredientSearch');

            if (e.target.checked) {
                ingredientsSection.style.opacity = '0.5';
                ingredientsSection.style.pointerEvents = 'none';
                searchInput.placeholder = 'Ингредиенты из холодильника будут использованы автоматически';
            } else {
                ingredientsSection.style.opacity = '1';
                ingredientsSection.style.pointerEvents = 'auto';
                searchInput.placeholder = 'Поиск ингредиентов';
            }
        });

        document.querySelector('form').addEventListener('submit',function(e){
            const useFridge = document.getElementById('useFridge').checked;
            if(useFridge){
                document.querySelectorAll('#IngredientList li').forEach(li => li.remove());
            }
        });

        document.addEventListener('DOMContentLoaded',function() {

            let currentValidIngredients = [];
            initializeExistingIngredients();

            document.getElementById('ingredientSearch').addEventListener('input', async function(e) {
            const searchTerm = e.target.value.trim().toLocaleLowerCase('ru-RU');
            const dropdown = document.getElementById('ingredientDropdown');

            if (searchTerm.length > 1) {
                try {
                    const response = await fetch(`/Recipes/SearchIngredients?term=${encodeURIComponent(searchTerm)}`);
                    currentValidIngredients = await response.json();

                    console.log('API Response:', currentValidIngredients);

                    const existing = getExistingIngredients();
                    const filtered = currentValidIngredients.filter(ing =>
                        !existing.includes(ing.name.toLowerCase()) // ing.Name
                    );

                    dropdown.innerHTML = filtered.map(ing =>
                        `<a href="#" class="dropdown-item" onclick="selectIngredient(event)"
                           data-name="${ing.name}"
                           data-unit="${ing.unit}">
                            ${ing.name} (${ing.unit})
                        </a>`
                    ).join('');

                    dropdown.style.display = filtered.length > 0 ? 'block' : 'none';
                } catch (error) {
                    console.error('Error:', error);
                    dropdown.style.display = 'none';
                }
            } else {
                dropdown.style.display = 'none';
                currentValidIngredients = [];
            }
        
        });

        function initializeExistingIngredients(){
            const existingIngredients = document.querySelectorAll('#IngredientList li');
            existingIngredients.forEach(li => {
                li.querySelector('button').addEventListener('click',function(){
                    this.parentElement.remove();
                });
            });
        }
        });

        function getExistingIngredients() {
            return Array.from(document.querySelectorAll('#IngredientList input[type="hidden"]'))
                .map(input => input.value.trim().toLowerCase());
        }


        function selectIngredient(event) {
            const target = event.target.closest('a'); 
            if (!target) return;
            const name = target.dataset.name;
            const unit = target.dataset.unit;

            addIngredientToList(name,unit);
            document.getElementById('ingredientSearch').value = '';
            document.getElementById('ingredientDropdown').style.display = 'none';
            event.preventDefault();
        }
        

        
        function addIngredientToList(name,unit,quantity = 1) {
            const list = document.getElementById('IngredientList');
            const existing = getExistingIngredients();

            if (!existing.includes(name.toLowerCase())) {
                const li = document.createElement('li');
                li.className = 'list-group-item d-flex align-items-center gap-3';
                li.innerHTML = `
                    <div class="d-flex gap-2 align-items-center flex-grow-1">
                    <span class="ingredient-name">${name}</span>
                    <input type="number"
                           name="quantities"
                           value="${quantity}"
                           min="1"
                           step="1"
                           class="form-control form-control-sm quantity-input"
                           style="width: 100px">
                    <span class="unit-display">${unit}</span>
                </div>
                <input type="hidden" name="ingredients" value="${name}">
                <input type="hidden" name="units" value="${unit}">
                <button type="button" class="btn btn-sm btn-danger" onclick="removeIngredient(this)">&times;</button>
                `;
                list.appendChild(li);
            }
        }

        function handleEnter(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                const input = document.getElementById('ingredientSearch');
                const value = input.value.trim();

                const exists = currentValidIngredients.some(ing =>
                    ing.name.toLowerCase() === value.toLowerCase()
                );

                if (!exists) {
                    alert('Пожалуйста, выберите ингредиент из списка');
                    input.value = '';
                    document.getElementById('ingredientDropdown').style.display = 'none';
                    return false;
                }

                const correctCaseIngredient = currentValidIngredients.find(
                    ing => ing.toLowerCase() === value.toLowerCase()
                );


                addIngredientToList(correctCaseIngredient);
                input.value = '';
                input.dispatchEvent(new Event('input'));
                return false;
            }
            return true;
        }

        
    </script>
}